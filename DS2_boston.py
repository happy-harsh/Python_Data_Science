import pandas as pd

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.decomposition import PCA
from sklearn.metrics import accuracy_score



lr =LinearRegression()

df =pd.read_csv("./HousingData.csv")
# print(df.describe())

# to fill Nan spaces
for i in df.columns:
    df[i].fillna((df[i].mean()),inplace=True)
print(df.head(10))

x=df.drop(columns=["MEDV"],axis=1)
print("All features",x)

y=df["MEDV"]
print("medv",y)

x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.3)

train=lr.fit(x_train,y_train)

y_p =lr.predict(x_test)
# print(accuracy_score(y_test,y_p))
print(mean_squared_error(y_test,y_p))


#     CRIM    ZN  INDUS      CHAS    NOX     RM    AGE     DIS  RAD  TAX  PTRATIO       B      LSTAT  MEDV
# 0  0.00632  18.0   2.31  0.000000  0.538  6.575   65.2  4.0900    1  296     15.3  396.90   4.980000  24.0
# 1  0.02731   0.0   7.07  0.000000  0.469  6.421   78.9  4.9671    2  242     17.8  396.90   9.140000  21.6
# 2  0.02729   0.0   7.07  0.000000  0.469  7.185   61.1  4.9671    2  242     17.8  392.83   4.030000  34.7
# 3  0.03237   0.0   2.18  0.000000  0.458  6.998   45.8  6.0622    3  222     18.7  394.63   2.940000  33.4
# 4  0.06905   0.0   2.18  0.000000  0.458  7.147   54.2  6.0622    3  222     18.7  396.90  12.715432  36.2
# 5  0.02985   0.0   2.18  0.000000  0.458  6.430   58.7  6.0622    3  222     18.7  394.12   5.210000  28.7
# 6  0.08829  12.5   7.87  0.069959  0.524  6.012   66.6  5.5605    5  311     15.2  395.60  12.430000  22.9
# 7  0.14455  12.5   7.87  0.000000  0.524  6.172   96.1  5.9505    5  311     15.2  396.90  19.150000  27.1
# 8  0.21124  12.5   7.87  0.000000  0.524  5.631  100.0  6.0821    5  311     15.2  386.63  29.930000  16.5
# 9  0.17004  12.5   7.87  0.069959  0.524  6.004   85.9  6.5921    5  311     15.2  386.71  17.100000  18.9
# All features         CRIM    ZN  INDUS  CHAS    NOX     RM        AGE     DIS  RAD  TAX  PTRATIO       B      LSTAT
# 0    0.00632  18.0   2.31   0.0  0.538  6.575  65.200000  4.0900    1  296     15.3  396.90   4.980000
# 1    0.02731   0.0   7.07   0.0  0.469  6.421  78.900000  4.9671    2  242     17.8  396.90   9.140000
# 2    0.02729   0.0   7.07   0.0  0.469  7.185  61.100000  4.9671    2  242     17.8  392.83   4.030000
# 3    0.03237   0.0   2.18   0.0  0.458  6.998  45.800000  6.0622    3  222     18.7  394.63   2.940000
# 4    0.06905   0.0   2.18   0.0  0.458  7.147  54.200000  6.0622    3  222     18.7  396.90  12.715432
# ..       ...   ...    ...   ...    ...    ...        ...     ...  ...  ...      ...     ...        ...
# 501  0.06263   0.0  11.93   0.0  0.573  6.593  69.100000  2.4786    1  273     21.0  391.99  12.715432
# 502  0.04527   0.0  11.93   0.0  0.573  6.120  76.700000  2.2875    1  273     21.0  396.90   9.080000
# 503  0.06076   0.0  11.93   0.0  0.573  6.976  91.000000  2.1675    1  273     21.0  396.90   5.640000
# 504  0.10959   0.0  11.93   0.0  0.573  6.794  89.300000  2.3889    1  273     21.0  393.45   6.480000
# 505  0.04741   0.0  11.93   0.0  0.573  6.030  68.518519  2.5050    1  273     21.0  396.90   7.880000

# [506 rows x 13 columns]
# medv 0      24.0
# 1      21.6     
# 2      34.7     
# 3      33.4     
# 4      36.2     
#        ...      
# 501    22.4
# 502    20.6
# 503    23.9
# 504    22.0
# 505    11.9
# Name: MEDV, Length: 506, dtype: float64
# 28.76061126260489



